Xpath Tasks,Authors.xml,Authors2.xml (with namespaces);;;;;;;;;;;
Normal:,,;;;;;;;;;;;
all elements,,;//*;;;;;;;;;;
"all ""author"" elements,,";//author;;;;;;;;;;
"the root element ""authors"" - 2 variants,,"; /authors and //author/ancestor::authors and /*;;;;;;;;;;
the same as 3,  but this time without using the name of the element,,;//author/..;;;;;;;//author/parent::authors;;;?
all elements enclosed by elements  /authors/author,,;//author/*;;;;;;;;;;
"all ""name"" elements (without using names of parent elements) ,,";//name;;;;;;;;;;
all elements which have 1 ancestors,,;may be //parent::*;;;;;;;//author[*];;;
"all ""period"" attributes of ""author"" elements - 2 variants,,";//author[contains(@period, 'classical')];;;;;;;;;;
"all ""author"" elements with a ""period"" attribute. ,,"; //author[@period];;;;;;;;;;
"the fourth ""author"" element. ,,";//author[4] and //author[.//name[text()='Alexander Pushkin']];;;;;;;;;;
"the ""name"" node of the fourth author,,";//author[4]/name;;;;;;;;;;
the name of the fourth author (text),,;//author[4]/name/text();;;;;;;;;;
all elements that have any attributes,,;//*[@*];;;;;;;;;;
all elements without any attributes,,;//*[not(@*)];;;;;;;;;;
the node of author born in 1828. ,,;//author[@born='1828'];;;;;;;;;;
name of the author born in 1828 (text),,;//author[contains(@born, '1828')]/name/text();;;;;;;;;;
all authors that died after the year 0. ,,;//author[@died > 0];;;;;;;;;;
the second author that died after the year 0 ,,;/authors/author[(number(attribute::died) >=0) and position()=2] and //author[(@died > 0)][2];;;;;;;//author[(@born < 0) and position() = 2];;;
the name of second author that died after the year 0 (text),,;//author[(@died > 0)][2]/name/text();;;;;;;//author[(@born < 0) and position() = 2]/name/text();;;
"the last ""author"" element. ,,";/authors/author[last()];;;;;;;;;;
"the ""name"" element that contains the text ""Tolstoy"". ,,";//author/name[contains(text(), 'Tolstoy')];;;;;;;//author/name[text()='Leo Tolstoy'];;;
"all elements that contain the text ""Tolstoy"",,";//author/name[contains(text(), 'Tolstoy')]/parent::*;;;;;;;;;;
all descendants of all authors that died before the year 0. ,,;//author[@died<0]/*;;;;;;;;;;
all elements name of which starts with letter a,,;/authors/author/name[starts-with(text(), 'A')]/../*;;;;;;;;;;
"all elements name of which contains ""t"",,";/authors/author/name[contains(text(), 't')]/../*;;;;;;;;;;
select name and nationality of the second author (text),,;/authors/author[2]/*;;;;;;;;;;
Advanced:,,;;;;;;;;;;;
 Tolstoy's nationality. ,,;//author[name='Leo Tolstoy']/nationality;;;;;;;;;;
the name of the second author that was 80 or older when he died. ,,;/authors/author[(number(attribute::died) - number(attribute::born)>=80) and position() = 2];;;;;;;;;;
"the born date of the last ""author"" element. ,,";//author[5]/attribute::born;;;;;;;;;;
select name of author if nationality is russian or period is classical (text),,;/authors/author[contains(@period, 'classical')]/nationality[text()='Russian'];;;;;;;;;;
the name of the second author after Tolstoy. ,,;//author/name[contains(text(), 'Tolstoy')]/../following-sibling::*[position()=2]/name/text();;;;;;;;;;
;;;;;;;;;;;
select record by name;//div/label[contains(text(), 'Recording')];;;;;;;;;;
change parameters by name;?;;;;;;;;;;
start experiment button;//button[@class='btn btn--contained oct-h9 btn--primary'];;;;;;;;;;
select pattern;?;;;;;;;;;;
start experiment button again;?;;;;;;;;;;
